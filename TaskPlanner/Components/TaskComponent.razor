@inject IJSRuntime _jsRuntime

<div class="task">

        @if (Completed)
        {
            <span class="material-symbols-outlined icon radio-marked">radio_button_checked</span>
        }
        else
        {
            <span class="material-symbols-outlined icon radio" @onclick="() => OnCompleteClick(Id)">radio_button_unchecked</span>
        }

        <input type="text" value="@Description" readonly class="input-task @(Completed ? "task-completed" : "")" />

        <span class="material-symbols-outlined icon delete" @onclick="() => OnDeleteClick(Id)">delete</span>
</div>

@code {

    [Parameter]
    public bool Completed { get; set; }

    [Parameter]
    public string Description { get; set; } = string.Empty;

    [Parameter]
    public string Id { get; set; } = string.Empty;

    private NewTaskViewModel NewTask { get; set; } = new NewTaskViewModel();

    [Parameter]
    public EventCallback<string> OnCompleteCallback { get; set; }

    [Parameter]
    public EventCallback<string> OnDeleteCallback { get; set; }

    private async Task OnCompleteClick(string id)
    {
        await OnCompleteCallback.InvokeAsync(id);
    }

    private async Task OnDeleteClick(string id)
    {
        await OnDeleteCallback.InvokeAsync(id);
    }
}
