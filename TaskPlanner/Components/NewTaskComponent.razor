@inject IJSRuntime _jsRuntime;

<div class="task">
    <EditForm Model="NewTask" OnSubmit="@(async () => await OnSubmit())" class="task-form">
        <span class="material-symbols-outlined icon">add</span>
        <InputText @ref="_inputTextTask" @bind-Value="NewTask.Description" class="input-task" placeholder="Adicionar uma tarefa" />
    </EditForm>
</div>

@code {
    private NewTaskViewModel NewTask { get; set; } = new NewTaskViewModel();

    private InputText _inputTextTask = null!;

    [Parameter]
    public EventCallback<NewTaskViewModel> OnAddCallback { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender)
            await _inputTextTask.Element!.Value.FocusAsync();
    }

    private async Task OnSubmit()
    {
        if (!string.IsNullOrEmpty(NewTask.Description))
        {
            await OnAddCallback.InvokeAsync(NewTask);

            NewTask = new();

        }
    }
}
